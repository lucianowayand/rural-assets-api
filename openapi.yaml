openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getVersion
      parameters: []
      responses:
        '200':
          description: Returns current version as the latest hashed commit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDto'
      tags:
        - root
  /users:
    post:
      operationId: UserController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
      tags: &ref_0
        - users
  /users/login:
    post:
      operationId: UserController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
      tags: *ref_0
  /producers:
    get:
      operationId: ProducerController_findByUserId
      parameters: []
      responses:
        '200':
          description: List of producers for the authenticated user.
      tags: &ref_1
        - producers
    post:
      operationId: ProducerController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProducerDto'
      responses:
        '201':
          description: Producer created.
      tags: *ref_1
  /producers/{id}:
    delete:
      operationId: ProducerController_softDelete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Producer deleted.
      tags: *ref_1
    patch:
      operationId: ProducerController_updateName
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProducerDto'
      responses:
        '200':
          description: Producer name updated.
      tags: *ref_1
info:
  title: NestJS Minimal API
  description: API de exemplo para start rapido.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    VersionDto:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    CreateUserDto:
      type: object
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        name:
          type: string
        password:
          type: string
        email:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - deletedAt
        - name
        - password
        - email
    UserDto:
      type: object
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - deletedAt
        - name
        - email
        - role
    LoginDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponseDto:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDto'
        authToken:
          type: string
      required:
        - user
        - authToken
    CreateProducerDto:
      type: object
      properties: {}
    UpdateProducerDto:
      type: object
      properties: {}
